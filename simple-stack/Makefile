# Load .env if it exists
ifneq (,$(wildcard .env))
  include .env
  export
endif

build:
	docker-compose build
up:
	docker-compose down
	docker-compose up -d
down:
	docker-compose down
logs:
	docker-compose logs -f node1 node2
reset:
	docker-compose stop node1 node2

	rm -rf ../canopy_data/node1/canopy/
	rm -rf ../canopy_data/node1/logs/

	rm -rf ../canopy_data/node2/canopy/
	rm -rf ../canopy_data/node2/logs/


	mkdir -p ../canopy_data/node1/canopy
	mkdir -p ../canopy_data/node1/logs

	mkdir -p ../canopy_data/node2/canopy
	mkdir -p ../canopy_data/node2/logs
start_with_snapshot:
	echo "Stopping node1 for downloading latest snapshot data chainID: 1"
	docker-compose stop node1

	echo "Downloading snapshot for mainnet chainID: 1"
	wget -O snapshot.tar.gz $(SNAPSHOT_1_URL)

	echo "Deleting/Recreating node1 datadir"
	rm -rf ../canopy_data/node1/canopy/
	mkdir  ../canopy_data/node1/canopy/

	echo "Uncompressing snapshot for mainnet chainID: 1"
	tar -xvzf ./snapshot.tar.gz -C ../canopy_data/node1/canopy/

	echo "Deleting snapshot for chain ID 2"
	rm ./snapshot.tar.gz

	echo "Restarting node1"

	echo "Stopping node2 for downloading latest snapshot data chainID: 2"
	docker-compose stop node2

	echo "Downloading snapshot for mainnet chainID: 2"
	wget -O snapshot.tar.gz $(SNAPSHOT_2_URL)

	echo "Deleting/Recreating node2 datadir"
	rm -rf ../canopy_data/node2/canopy/
	mkdir ../canopy_data/node2/canopy/

	echo "Uncompressing snapshot for mainnet chainID: 2"
	tar -xvzf ./snapshot.tar.gz -C ../canopy_data/node2/canopy/

	echo "Deleting snapshot for chain ID 2"
	rm ./snapshot.tar.gz

	echo "Restarting node2 and whole stack"
	docker-compose up -d 
